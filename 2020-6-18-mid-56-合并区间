class Solution {
    public int[][] merge(int[][] intervals) {
        // 先按照区间起始位置排序
        Arrays.sort(intervals, (v1, v2) -> v1[0] - v2[0]);
        // 遍历区间
        List<int[]> list = new ArrayList<>();
        for (int[] interval: intervals) {
            if (list.size() == 0 || interval[0] > list.get(list.size() - 1)[1]) {
                list.add(interval);
            } else {
                // 反之将当前区间合并至结果数组的最后区间
                list.get(list.size() - 1)[1] = Math.max(list.get(list.size() - 1)[1], interval[1]);
            }
        }
        return list.toArray(new int[list.size()][2]);
    }
}
