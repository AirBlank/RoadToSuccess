/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        if(head == null)return false;
        ListNode slow = head,fast = head;
        while(true){
            if(slow.next != null){
                slow = slow.next;
            }else{
                return false;
            }
            if(fast.next != null){
                fast = fast.next;
                if(fast.next != null){
                    fast = fast.next;
                }else{
                    return false;
                }
            }else{
                return false;
            }
            if(slow == fast)break;
        }
        return true;
    }
}
