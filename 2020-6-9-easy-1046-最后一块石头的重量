class Solution {
    public int lastStoneWeight(int[] stones) {
        int len = stones.length;
        //构造最大堆
        PriorityQueue<Integer> maxHeap = new PriorityQueue<>(len, (o1, o2) -> o2- o1);
        for (int stone : stones) {
            maxHeap.add(stone);
        }
        //每次取堆顶元素
        while (maxHeap.size() >= 2) {
            Integer head1 = maxHeap.poll();
            Integer head2 = maxHeap.poll();
            //二者合并
            maxHeap.offer(head1 - head2);
        }
        //最后剩一个元素
        return maxHeap.poll();
    }
}
