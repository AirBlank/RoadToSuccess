class Solution {
    public int[][] kClosest(int[][] points, int K) {
        if  (null == points || points.length == 0) {
            return null;
        }
        PriorityQueue<int[]> queue = new PriorityQueue<>(K, new Comparator<int[]>() {
            @Override
            public int compare(int[] o1, int[] o2) {
                int distance1 = o1[0] * o1[0] + o1[1] * o1[1];
                int distance2 = o2[0] * o2[0] + o2[1] * o2[1];
                return distance1 - distance2;
            }
        });
        queue.addAll(Arrays.asList(points));
        int[][] res = new int[K][2];
        for (int i = 0; i < K; i++) {
            res[i] = queue.poll();
        }
        return res;
    }
} 
